[{"C:\\coderschool\\movieDB\\src\\index.js":"1","C:\\coderschool\\movieDB\\src\\App.js":"2","C:\\coderschool\\movieDB\\src\\pages\\MovieDetailPage.js":"3","C:\\coderschool\\movieDB\\src\\pages\\HomePage.js":"4","C:\\coderschool\\movieDB\\src\\pages\\NotFoundPage.js":"5","C:\\coderschool\\movieDB\\src\\pages\\MovieList.js":"6","C:\\coderschool\\movieDB\\src\\apiService.js":"7","C:\\coderschool\\movieDB\\src\\components\\PaginationBar.js":"8","C:\\coderschool\\movieDB\\src\\components\\PublicNavbar.js":"9","C:\\coderschool\\movieDB\\src\\components\\SearchForm.js":"10"},{"size":151,"mtime":1618735477382,"results":"11","hashOfConfig":"12"},{"size":724,"mtime":1618756576104,"results":"13","hashOfConfig":"12"},{"size":2830,"mtime":1618816205274,"results":"14","hashOfConfig":"12"},{"size":5437,"mtime":1618803575693,"results":"15","hashOfConfig":"12"},{"size":168,"mtime":1618735477387,"results":"16","hashOfConfig":"12"},{"size":156,"mtime":1618758992719,"results":"17","hashOfConfig":"12"},{"size":1123,"mtime":1618735845988,"results":"18","hashOfConfig":"12"},{"size":1706,"mtime":1618735477376,"results":"19","hashOfConfig":"12"},{"size":911,"mtime":1618756500102,"results":"20","hashOfConfig":"12"},{"size":842,"mtime":1618735477378,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11y8c3l",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\coderschool\\movieDB\\src\\index.js",[],["45","46"],"C:\\coderschool\\movieDB\\src\\App.js",[],"C:\\coderschool\\movieDB\\src\\pages\\MovieDetailPage.js",["47","48","49","50","51","52"],"import React, { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\nimport api from \"../apiService\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n// const MOVIETRAILER = `https://api.themoviedb.org/3/movie/${params.id}/videos?api_key=${movieAPI}&language=en-US`;\r\nconst MovieDetailPage = () => {\r\n  const color = \"#d35400\";\r\n  const [loading, setLoading] = useState(false);\r\n  const [movie, setMovie] = useState(null);\r\n  const [addingMovie, setAddingMovie] = useState(false);\r\n  let [movieID, setMovieID] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const params = useParams();\r\n  console.log(params);\r\n\r\n  const addToFavorites = (movie) => {\r\n    // console.log(movie)\r\n    setAddingMovie(movie);\r\n  };\r\n\r\n  // This function to get data details books\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await api.get(`/movie/${params.id}?`);\r\n        const data = res.data;\r\n        setMovie(data);\r\n      } catch (error) {}\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [params]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <PropagateLoader color={color} loading={loading} size={15} />\r\n      ) : (\r\n        <>\r\n          {movie && (\r\n            <Container className=\"d-flex justify-content-between mt-4\">\r\n              <Row md={3}>\r\n                <Col>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                    alt=\"movie poster\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row md={9}>\r\n                <Col className=\"ml-5\">\r\n                  <div>\r\n                    <h1>{movie.title}</h1>\r\n                    {movie.genres.map((item) => {\r\n                      return (\r\n                        <Badge pill className=\"mr-2\" variant=\"danger\">\r\n                          {item.name}\r\n                        </Badge>\r\n                      );\r\n                    })}\r\n                    <p>{movie.overview}</p>\r\n                    <Badge variant=\"info\">\r\n                      <strong>Release date: </strong>\r\n                      {movie.release_date}\r\n                    </Badge>\r\n                  </div>\r\n                  <Button\r\n                    className=\"mt-5\"\r\n                    variant=\"outline-danger\"\r\n                    onClick={() => addToFavorites(movie)}\r\n                  >\r\n                    Add favorite\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailPage;\r\n","C:\\coderschool\\movieDB\\src\\pages\\HomePage.js",[],"C:\\coderschool\\movieDB\\src\\pages\\NotFoundPage.js",[],"C:\\coderschool\\movieDB\\src\\pages\\MovieList.js",[],"C:\\coderschool\\movieDB\\src\\apiService.js",[],"C:\\coderschool\\movieDB\\src\\components\\PaginationBar.js",[],"C:\\coderschool\\movieDB\\src\\components\\PublicNavbar.js",[],"C:\\coderschool\\movieDB\\src\\components\\SearchForm.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":7,"nodeType":"61","messageId":"62","endLine":7,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":14,"column":10,"nodeType":"61","messageId":"62","endLine":14,"endColumn":21},{"ruleId":"59","severity":1,"message":"64","line":15,"column":8,"nodeType":"61","messageId":"62","endLine":15,"endColumn":15},{"ruleId":"59","severity":1,"message":"65","line":15,"column":17,"nodeType":"61","messageId":"62","endLine":15,"endColumn":27},{"ruleId":"59","severity":1,"message":"66","line":16,"column":10,"nodeType":"61","messageId":"62","endLine":16,"endColumn":14},{"ruleId":"59","severity":1,"message":"67","line":16,"column":16,"nodeType":"61","messageId":"62","endLine":16,"endColumn":23},{"ruleId":"55","replacedBy":"68"},{"ruleId":"57","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'API_KEY' is assigned a value but never used.","Identifier","unusedVar","'addingMovie' is assigned a value but never used.","'movieID' is assigned a value but never used.","'setMovieID' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation"]